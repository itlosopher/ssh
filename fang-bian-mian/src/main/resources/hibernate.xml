<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
        
	<!-- 配置数据源 -->
    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp2.BasicDataSource">
        <!-- 连接信息通过spring.xml文件引入 -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

	<!-- 通过数据源初始化sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 包扫描，不用单独配置.hbm.xml文件 -->
		<!-- <property name="packagesToScan">
			<list>
				<value>model</value>
			</list>
		</property> -->
		<!-- <property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
				hibernate.format_sql=${hibernate.format}
			</value>
		</property> -->
		<!-- 配置hibernate的hbm文件的名称以及路径 -->
<!-- 		<property name="mappingLocations" value="classpath:com/yt/fbm/bean/User.hbm.xml"></property>-->
	</bean>

	<!-- 通过注入sessionFactory获取事务控制器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事务建言：事务控制器的详细配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 启用事物的方法前缀 -->
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<!-- 仅适用只读事物的方法前缀 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<!-- 默认其他方法不开启事物 -->
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置需要添加事务控制的切点 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.yt.fbm..*Service.*(..))" advice-ref="txAdvice" />
	</aop:config>

</beans>